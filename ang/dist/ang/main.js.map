{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/final/final.component.css","webpack:///./src/app/final/final.component.html","webpack:///./src/app/final/final.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/one/one.component.css","webpack:///./src/app/one/one.component.html","webpack:///./src/app/one/one.component.ts","webpack:///./src/app/two/two.component.css","webpack:///./src/app/two/two.component.html","webpack:///./src/app/two/two.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OneComponent } from './one/one.component';\nimport { TwoComponent } from './two/two.component';\nimport { FinalComponent } from './final/final.component'\n\n\nconst routes: Routes = [\n  { path: '',component: OneComponent },\n  { path: 'two',component: TwoComponent },\n  { path: 'final',component: FinalComponent }  \n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OneComponent } from './one/one.component';\nimport { TwoComponent } from './two/two.component';\nimport { FinalComponent } from './final/final.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpService } from './http.service'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OneComponent,\n    TwoComponent,\n    FinalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n  <!-- Congratulations {{ formData.firstName }}  {{ formData.lastName }}, your formData has been submitted with the folllowing details\\n  \\n  <h1>Summary</h1>\\n  <ul>\\n    <li>Gender: {{ formData.gender }}</li>\\n    <li>Age:  {{ formData.age }}</li>\\n    <li>Number of Tickets: {{ formData.numberOfTickets }}</li>\\n  </ul> -->\\n  User selected the following input:\\n  <br>\\n  {{ formData.Make }} {{ formData.Year }} {{ formData.gender }} with <p id = \\\"demo\\\"></p> on {{ formData.to }}\\n\\n\\n  <script>\\n      function myFunction() {\\n          var x = document.getElementById(\\\"mySelect\\\").value;\\n          document.getElementById(\\\"demo\\\").innerHTML = x;\\n      }\\n      </script>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service'\n\n@Component({\n  selector: 'app-final',\n  templateUrl: './final.component.html',\n  styleUrls: ['./final.component.css']\n})\nexport class FinalComponent implements OnInit {\n\n  formData = {}\n  constructor(private http:HttpService) { }\n\n  ngOnInit() {\n    this.formData = this.http.getForm()\n    console.log(this.formData)\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  form = {}\n  \n      constructor(private http:Http){}\n  \n      setForm(form){\n              this.form = form\n              console.log(this.form)\n      }\n      getForm(){\n          return this.form\n      }\n      postService(){\n          return this.http.post('',this.form)\n      }\n}\n","module.exports = \"\"","module.exports = \"<form #formpart1=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart1)\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Make</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Honda\\\" ngModel name=\\\"Make\\\">\\n    </div>\\n  </div>\\n\\n  <!-- <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Model</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <select ng-model=\\\"selectedName\\\" ng-options=\\\"x for x in names\\\">\\n          <option *ngFor=\\\"modell\\\">\\n            Civic          \\n        </option>\\n        <option *ngFor=\\\"modell\\\">\\n            Odyssey          \\n        </option>\\n        <option *ngFor=\\\"modell\\\">\\n            Pilot          \\n        </option>\\n        <option *ngFor=\\\"modell\\\">\\n            Accord          \\n        </option>\\n      </select>>\\n     </select>\\n    </div>\\n  </div> -->\\n  <div class=\\\"form-group row\\\">\\n    <h5>Model</h5>\\n      <select ngModel name=\\\"model\\\">\\n          <option value=\\\"Civic\\\">Civic</option>\\n          <option value=\\\"Odyssey\\\">Odyssey</option>\\n          <option value=\\\"Pilot\\\">Pilot</option>\\n          <option value=\\\"Accord\\\">Accord</option>\\n        </select>\\n    </div>  \\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">Year</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Year\\\" ngModel name=\\\"Year\\\">\\n      </div>\\n    </div>\\n  <fieldset class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <legend class=\\\"col-form-label col-sm-2 pt-0\\\">Type</legend>\\n      <div class=\\\"col-sm-10\\\">\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"gridRadios1\\\" value=\\\"Sedan\\\" ngModel checked>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios1\\\">\\n            Sedan\\n          </label>\\n        </div>\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"gridRadios2\\\" value=\\\"Coupe\\\" ngModel>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios2\\\">\\n            Coupe\\n          </label>\\n        </div>\\n      \\n      </div>\\n    </div>\\n  </fieldset>\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">next</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {HttpService} from '../http.service'\n\n@Component({\n  selector: 'app-one',\n  templateUrl: './one.component.html',\n  styleUrls: ['./one.component.css']\n})\nexport class OneComponent implements OnInit {\n\n  constructor(private router:Router,private http:HttpService) { }\n  \n    ngOnInit() {\n    }\n  \n    signin(form){\n      this.http.setForm(form.value)\n      this.router.navigateByUrl('/two')\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<form #formpart2=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart2)\\\">\\n  <div class=\\\"form-group row\\\">\\n    <H4>Features:</H4><br>\\n    \\n      <label>GPS:\\n          <input type=\\\"checkbox\\\" ng-model=\\\"checkboxModel.value1\\\">\\n        </label><br>\\n      \\n        <label>Security Lock:\\n          <input type=\\\"checkbox\\\" ng-model=\\\"checkboxModel.value2\\\"\\n                 ng-true-value=\\\"'YES'\\\" ng-false-value=\\\"'NO'\\\">\\n         </label><br>\\n         <label>Cargo Mat:\\n            <input type=\\\"checkbox\\\" ng-model=\\\"checkboxModel.value2\\\"\\n                   ng-true-value=\\\"'YES'\\\" ng-false-value=\\\"'NO'\\\">\\n           </label><br>\\n        <!-- <tt>value1 = {{checkboxModel.value1}}</tt><br/>\\n        <tt>value2 = {{checkboxModel.value2}}</tt><br/>\\n        <tt>value3 = {{checkboxModel.value3}}</tt><br/>         -->\\n  </div>\\n\\n\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Purchase Date</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"To\\\" ngModel name=\\\"to\\\">\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Email ID</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Email ID\\\" ngModel name=\\\"emailId\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Number of tickets</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Number of Tickets\\\" ngModel name=\\\"numberOfTickets\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Age</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Age\\\" ngModel name=\\\"age\\\">\\n    </div>\\n  </div> -->\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {HttpService} from '../http.service'\n\n@Component({\n  selector: 'app-two',\n  templateUrl: './two.component.html',\n  styleUrls: ['./two.component.css']\n})\nexport class TwoComponent implements OnInit {\n\n  constructor(private router:Router,private http:HttpService) { }\n  \n    ngOnInit() {\n    }\n  \n    signin(form){\n        var formpart1 = this.http.getForm()\n        this.http.setForm({...formpart1,...form.value})\n        this.http.postService().subscribe(\n          res => {\n            console.log(res)\n            this.router.navigateByUrl('/final')\n          },\n          err => {\n              console.log(err)\n          }\n        )\n        \n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}